import{p as m,d as h,h as p,e as l,i as f,u as S,I as _,J as g,k as E,q as I,w as T,K as U,f as b,t as d}from"./index-BBEn_SVL.js";import{g as C}from"./roles-D2CXlHPl.js";const D={VITE_EMAIL_HOST:"https://us-central1-clubtoros-c8a29.cloudfunctions.net/sendEmailFunction",VITE_HOST:"https://admin.clubtoros.com/api"},{VITE_EMAIL_HOST:O,VITE_HOST:W}=D,w=h(l,"usuarios"),R=h(l,"roles"),q=async o=>{try{let s=!1,r;for(;!s;)r=Math.floor(1e5+Math.random()*9e5).toString(),s=await N(r);M(o.correo,r);const a=(await _(g,o.correo,r)).user,e={...o,uid:a.uid,codigo_acceso:r,fecha_registro:new Date().toISOString()},n=await E(w,e);return await P(),{id:n.id,userData:e}}catch(s){console.error("Error al agregar usuario:",s)}},A=async()=>{try{const s=(await m(w)).docs.map(e=>({id:e.id,...e.data()})),t=(await m(R)).docs.reduce((e,n)=>(e[n.id]=n.data().nombre,e),{});return s.map(e=>({...e,rol:t[e.rol_id]||"Sin rol",rol_id:{label:t[e.rol_id],value:e.rol_id}}))}catch(o){console.error("Error al obtener usuarios:",o)}},H=async(o,s)=>{try{const r=p(l,"usuarios",o);await S(r,s)}catch(r){console.error("Error al actualizar usuario:",r)}},v=async o=>{try{const s=p(l,"usuarios",o);await f(s)}catch(s){console.error("Error al eliminar usuario:",s)}},M=async(o,s)=>{try{if(!(await fetch(O,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:o,code:s})})).ok)throw new Error("No se pudo enviar el correo.")}catch(r){throw console.error("Error al enviar el correo:",r),new Error("No se pudo enviar el correo.")}},N=async o=>{const s=I(h(l,"usuarios"),T("codigo_acceso","==",o));return(await m(s)).empty},P=async()=>{const o=localStorage.getItem("email"),s=localStorage.getItem("mensaje");!o&&!s&&(window.location.href="/"),await U(g,o,s)};let y=null;const z=b((o,s)=>({users:[],usersCount:0,roles:[],loading:!1,getDataRoles:async()=>new Promise((r,t)=>{try{y?r(s().roles):y=C(a=>{o({roles:a}),r(a)})}catch(a){console.error(a),t(a)}finally{o({loading:!1})}}),getDataUsers:async()=>{o({loading:!0});try{const r=await A();return o(()=>({users:r,usersCount:r.length})),r}catch(r){console.error(r)}finally{o({loading:!1})}},addUser:async r=>{const t=async()=>{var a;try{const{id:e,userData:n}=await q(r),{roles:c}=s(),i=((a=c.find(u=>u.id===r.rol_id))==null?void 0:a.nombre)||"Sin rol";o(u=>({users:[...u.users,{id:e,...n,rol:i}]}))}catch(e){console.error(e)}};d.promise(t(),{loading:"Creando registro...",success:"Registro creado correctamente",error:"Falló al crear el registro."})},editUser:async r=>{const t=async()=>{var a;try{await H(r.id,r);const{roles:e}=s(),n=((a=e.find(c=>c.id===r.rol_id))==null?void 0:a.nombre)||"Sin rol";o(c=>({users:c.users.map(i=>i.id===r.id?{...i,...r,rol:n}:i)}))}catch(e){console.error(e)}};d.promise(t(),{loading:"Actualizando...",success:"Actualizado correctamente",error:"Falló al eliminar."})},deleteUser:async(r,t)=>{const a=async()=>{try{await v(r,t),o(e=>({users:e.users.filter(n=>n.id!==r)}))}catch(e){console.error(e)}};d.promise(a(),{loading:"Eliminando...",success:"Eliminado correctamente",error:"Falló al eliminar."})}}));export{W as H,z as u};
