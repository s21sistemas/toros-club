import{p as w,q as D,d as Y,w as j,o as q,h as I,e as h,i as F,u as C,k as M,f as A,t as m}from"./index-CjWeqAa0.js";import{d as b}from"./dayjs.min-DH9acFiI.js";import{c as _}from"./caja-CQ-B0I8H.js";const y=Y(h,"pagos_jugadores"),J=async d=>{try{const o=b(),a={...d,fecha_registro:o.format("YYYY-MM-DD")};return(await M(y,a)).id}catch(o){console.error("Error al agregar pago:",o)}},E=async d=>q(y,o=>{const a=o.docs.map(r=>{var c,i,l,g,u,e;const n=r.data(),t=n.pagos||[];return{id:r.id,jugador:{value:n.jugadorId,label:n.nombre},prorroga:(c=t.find(s=>s.tipo==="Inscripción"))==null?void 0:c.prorroga,fecha_limite:(i=t.find(s=>s.tipo==="Inscripción"))==null?void 0:i.fecha_limite,inscripcion:(l=t.find(s=>s.tipo==="Inscripción"))==null?void 0:l.estatus,tunel:(g=t.find(s=>s.tipo==="Túnel"))==null?void 0:g.estatus,botiquin:(u=t.find(s=>s.tipo==="Botiquín"))==null?void 0:u.estatus,coacheo:(e=t.find(s=>s.tipo==="Coaching"))==null?void 0:e.estatus,...r.data()}});d(a)}),S=async(d,o)=>{try{return(await w(D(y,j("temporadaId","==",d),j("categoria","==",o)))).docs.map(n=>{var i,l,g,u,e,s;const t=n.data(),c=t.pagos||[];return{id:n.id,jugador:{value:t.jugadorId,label:t.nombre},prorroga:(i=c.find(p=>p.tipo==="Inscripción"))==null?void 0:i.prorroga,fecha_limite:(l=c.find(p=>p.tipo==="Inscripción"))==null?void 0:l.fecha_limite,inscripcion:(g=c.find(p=>p.tipo==="Inscripción"))==null?void 0:g.estatus,tunel:(u=c.find(p=>p.tipo==="Túnel"))==null?void 0:u.estatus,botiquin:(e=c.find(p=>p.tipo==="Botiquín"))==null?void 0:e.estatus,coacheo:(s=c.find(p=>p.tipo==="Coaching"))==null?void 0:s.estatus,...n.data()}})}catch(a){return console.error("Error al obtener porristas:",a),[]}},k=async(d,o)=>{try{let a={...o};const r=o.pagos.findIndex(e=>e.tipo==="Coaching");if(r!==-1){const e=o.pagos[r],s=b(),p=e.fecha_pago?b(e.fecha_pago).add(1,"week").format("YYYY-MM-DD"):s.add(1,"week").format("YYYY-MM-DD"),P=e.fecha_pago?e.fecha_pago:s.format("YYYY-MM-DD");e.estatus==="pagado"&&(a.pagos[r]={...e,estatus:"pendiente",fecha_limite:p,fecha_pago:P})}const n=o.pagos.find(e=>e.tipo==="Inscripción"),t=o.pagos.find(e=>e.tipo==="Túnel"),c=o.pagos.find(e=>e.tipo==="Botiquín"),i=o.pagos.find(e=>e.tipo==="Coaching");if(n.abono==="SI"){Array.isArray(n.abonos)||(n.abonos=[]),n.abonos.push({cantidad:o.cantidad_abono_ins,fecha:o.fecha_abono_ins,metodo:o.metodo_pago_abono_ins}),n.total_abonado=parseFloat(o.cantidad_abono_ins)+parseFloat(n.total_abonado||0),n.abono="NO";const e={jugadorId:o.jugadorId,nombre:o.nombre,tabla:"Jugador",concepto:"Pago de inscripción (abono)",fecha_pago:o.fecha_abono_ins||g,total:o.cantidad_abono_ins||0,metodo_pago:o.metodo_pago_abono_ins||null};await _(e)}if(t.abono==="SI"){Array.isArray(t.abonos)||(t.abonos=[]),t.abonos.push({cantidad:o.cantidad_abono_tunel,fecha:o.fecha_abono_tunel,metodo:o.metodo_pago_abono_tunel}),t.total_abonado=parseFloat(o.cantidad_abono_tunel)+parseFloat(t.total_abonado||0),t.abono="NO";const e={jugadorId:o.jugadorId,nombre:o.nombre,tabla:"Jugador",concepto:"Pago de tunel (abono)",fecha_pago:o.fecha_abono_tunel||g,total:o.cantidad_abono_tunel||0,metodo_pago:o.metodo_pago_abono_tunel||null};await _(e)}if(c.abono==="SI"){Array.isArray(c.abonos)||(c.abonos=[]),c.abonos.push({cantidad:o.cantidad_abono_botiquin,fecha:o.fecha_abono_botiquin,metodo:o.metodo_pago_abono_botiquin}),c.total_abonado=parseFloat(o.cantidad_abono_botiquin)+parseFloat(c.total_abonado||0),c.abono="NO";const e={jugadorId:o.jugadorId,nombre:o.nombre,tabla:"Jugador",concepto:"Pago de botiquin (abono)",fecha_pago:o.fecha_abono_botiquin||g,total:o.cantidad_abono_botiquin||0,metodo_pago:o.metodo_pago_abono_botiquin||null};await _(e)}if(i.abono==="SI"){Array.isArray(i.abonos)||(i.abonos=[]),i.abonos.push({cantidad:o.cantidad_abono_coach,fecha:o.fecha_abono_coach,metodo:o.metodo_pago_abono_coach}),i.total_abonado=parseFloat(o.cantidad_abono_coach)+parseFloat(i.total_abonado||0),i.abono="NO";const e={jugadorId:o.jugadorId,nombre:o.nombre,tabla:"Jugador",concepto:"Pago de coach (abono)",fecha_pago:o.fecha_abono_coach||g,total:o.cantidad_abono_coach||0,metodo_pago:o.metodo_pago_abono_coach||null};await _(e)}const l={...o,pagos:o.pagos.map(e=>({...e}))},g=b().format("YYYY-MM-DD");if(n.estatus==="pagado"){const e={jugadorId:l.jugadorId,nombre:l.nombre,tabla:"Jugador",concepto:"Pago de inscripción",fecha_pago:n.fecha_pago||g,total:n.monto||0,metodo_pago:n.metodo_pago||null};await _(e)}if(t.estatus==="pagado"){const e={jugadorId:l.jugadorId,nombre:l.nombre,tabla:"Jugador",concepto:"Pago de túnel",fecha_pago:t.estatus.fecha_pago||g,total:t.estatus.monto||0,metodo_pago:t.estatus.metodo_pago||null};await _(e)}if(c.estatus==="pagado"){const e={jugadorId:l.jugadorId,nombre:l.nombre,tabla:"Jugador",concepto:"Pago de botiquín",fecha_pago:c.fecha_pago||g,total:c.monto||0,metodo_pago:c.metodo_pago||null};await _(e)}if(i.estatus==="pagado"){const e={jugadorId:l.jugadorId,nombre:l.nombre,tabla:"Jugador",concepto:"Pago de coaching semanal",fecha_pago:i.fecha_pago||g,total:i.monto||0,metodo_pago:i.metodo_pago||null};await _(e)}delete a.jugador,delete a.botiquin,delete a.coacheo,delete a.inscripcion,delete a.prorroga,delete a.tunel,delete a.fecha_limite,delete a.cantidad_abono_ins,delete a.fecha_abono_ins,delete a.metodo_pago_abono_ins,delete a.cantidad_abono_coach,delete a.fecha_abono_coach,delete a.metodo_pago_abono_coach,delete a.cantidad_abono_tunel,delete a.fecha_abono_tunel,delete a.metodo_pago_abono_tunel,delete a.cantidad_abono_botiquin,delete a.fecha_abono_botiquin,delete a.metodo_pago_abono_botiquin;const u=I(h,"pagos_jugadores",d);await C(u,a)}catch(a){console.error("Error al actualizar pago:",a)}},R=async d=>{try{const o=I(h,"pagos_jugadores",d);await F(o)}catch(o){console.error("Error al eliminar pago:",o)}};let f=null;const v=A((d,o)=>({payments:[],loading:!1,getDataPaymentsPlayer:async()=>(d({loading:!0}),new Promise((a,r)=>{try{f?a(o().payments):f=E(n=>{d({payments:n}),a(n)})}catch(n){console.error(n),r(n)}finally{d({loading:!1})}})),getDataFilter:async(a,r)=>{const n=await S(a,r);f=null,d({payments:n})},addPayment:async a=>{const r=async()=>{try{const t=b().add(1,"week").format("YYYY/MM/DD");a.pagos[0].fecha_limite=t,a.jugadorId=a.jugador.value,a.nombre=a.jugador.label,delete a.jugador,await J(a)}catch(n){console.error(n)}};m.promise(r(),{loading:"Creando registro...",success:"Registro creado correctamente",error:"Falló al crear el registro."})},editPayment:async a=>{const r=async()=>{try{await k(a.id,a)}catch(n){console.error(n)}};m.promise(r(),{loading:"Actualizando...",success:"Actualizado correctamente",error:"Falló al eliminar."})},deletePayment:async a=>{const r=async()=>{try{await R(a)}catch(n){console.error(n)}};m.promise(r(),{loading:"Eliminando...",success:"Eliminado correctamente",error:"Falló al eliminar."})}}));export{v as u};
