import{o as h,h as l,e as s,i as w,u as i,k as y,d,q as m,w as u,p as f,t as p}from"./index-CjWeqAa0.js";import{d as A}from"./dayjs.min-DH9acFiI.js";const n=d(s,"almacen"),g=async o=>{try{return(await y(n,o)).id}catch(a){console.error("Error al agregar entrada en almacén:",a)}},I=async o=>h(n,a=>{const t=a.docs.map(c=>({id:c.id,...c.data(),articulo:c.data().articuloId.label}));o(t)}),R=async(o,a)=>{try{delete a.articulo;const t=l(s,"almacen",o);await i(t,a)}catch(t){console.error("Error al actualizar almacén:",t)}},q=async o=>{try{const a=l(s,"almacen",o);await w(a)}catch(a){console.error("Error al eliminar entrada en almacén:",a)}},D=async(o,a)=>{try{const t=m(n,u("articuloId","==",o)),c=await f(t);if(c.empty)await y(n,{articuloId:o,stock:a,tipo:"entrada",concepto:"Compra de artículos",fecha:A().format("DD/MM/YYYY")});else{const r=l(s,"almacen",c.docs[0].id),e=c.docs[0].data();await i(r,{stock:parseFloat(e.stock)+parseFloat(a)})}}catch(t){console.error("Error al actualizar stock en almacén:",t)}},S=async o=>{try{const a=[];for(const t of o){const c=m(d(s,"almacen"),u("articuloId.label","==",t.label)),r=await f(c);if(r.empty)return p.warning(`El artículo ${t.label} no existe en almacén`),!1;const e=r.docs[0].data();if(parseInt(e.stock)<=0)return p.warning(`No hay stock suficiente del artículo: ${t.label}`),!1;a.push({id:r.docs[0].id,stock:parseInt(e.stock)})}for(const{id:t,stock:c}of a){const r=l(s,"almacen",t);await i(r,{stock:c-1})}return!0}catch(a){throw console.error("Error al restar stock en almacén:",a),a}},Y=async o=>{try{const a=d(s,"almacen");for(const t of o){const c=m(a,u("articuloId","==",t)),r=await f(c);r.empty||r.forEach(async e=>{const k=e.data().stock||0;await i(e.ref,{stock:k+1})})}return!0}catch(a){return console.error("Error al sumar stock al almacén:",a),!1}};export{q as a,D as b,g as c,I as g,S as r,Y as s,R as u};
